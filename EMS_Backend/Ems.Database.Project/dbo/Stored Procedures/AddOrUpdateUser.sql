CREATE PROCEDURE [dbo].[AddOrUpdateUser]
(
	@UID UNIQUEIDENTIFIER,
    @FirstName NVARCHAR(500),
	@LastName NVARCHAR(500),
	@EmployeeID NVARCHAR(500),
	@Address NVARCHAR(MAX),
	@PhoneNumber NVARCHAR(15),
	@UserRole NVARCHAR(500),
	@Designation NVARCHAR(500),
	@IsActive BIT,
	@Email NVARCHAR(500),
	@DateOfBirth DATETIME,
	@DateOfJoin DATETIME,
	@ManagerUID UNIQUEIDENTIFIER,
	@Location NVARCHAR(500),
	@MaritalStatus NVARCHAR(500),
	@Age INT,
	@Gender NVARCHAR(500),
	@BloodGroup NVARCHAR(500),
	@EmergencyNumber NVARCHAR(15),
	@About NVARCHAR(MAX),
	@CreatedBy UNIQUEIDENTIFIER,
	@School NVARCHAR(500),
	@College NVARCHAR(500),
	@PreviousCompany NVARCHAR(500),
	@PrivilegeLeave INT,
	@WellnessLeave INT,
	@EarnedLeave INT,
	@CompOff INT,
	@OptionalLeave INT,
	@LossOfPay INT,
	@PasswordHash VARBINARY(MAX),
	@HashKey VARBINARY(MAX)
)
AS
BEGIN
    -- SET NOCOUNT ON added to prevent extra result sets from
    -- interfering with SELECT statements.
    SET NOCOUNT ON
    -- Insert statements for procedure here
    IF NOT EXISTS(SELECT 1 FROM [data].[User] WHERE Email = @Email)
	BEGIN
		INSERT INTO [data].[User] (
			UID,
			FirstName,
			LastName,
			EmployeeID,
			[Address],
			PhoneNumber,
			DesignationID,
			RoleID,
			IsActive,
			Email,
			DateOfBirth,
			DateOfJoin,
			ManagerUID,
			[Location],
			MaritalStatus,
			Age,
			Gender,
			BloodGroup,
			EmergencyNumber,
			About,
			CreatedBy,
			CreatedOn,
			School,
			College,
			PreviousCompany,
			PrivilegeLeave,
			WellnessLeave,
			EarnedLeave,
			OptionalLeave,
			LossOfPay,
			CompOff,
			PasswordHash,
			HashKey
		)
		VALUES(
			@UID,
			@FirstName,
			@LastName,
			@EmployeeID,
			@Address,
			@PhoneNumber,
			(SELECT Id FROM [config].[Designation] WHERE [Name] = @Designation),
			(SELECT Id FROM [config].[UserRole] WHERE [Name] = @UserRole),
			@IsActive,
			@Email,
			@DateOfBirth,
			@DateOfJoin,
			@ManagerUID,
			@Location,
			@MaritalStatus,
			@Age,
			@Gender,
			@BloodGroup,
			@EmergencyNumber,
			@About,
			@CreatedBy,
			GETUTCDATE(),
			@School,
			@College,
			@PreviousCompany,
			@PrivilegeLeave,
			@WellnessLeave,
			@EarnedLeave,
			@OptionalLeave,
			@LossOfPay,
			@CompOff,
			@PasswordHash,
			@HashKey
		)
	 END
	 ELSE
	 BEGIN
		UPDATE [data].[User] SET Email = @Email,
			FirstName = @FirstName,
			LastName = @LastName,
			EmployeeID = @EmployeeID,
			[Address] = @Address,
			PhoneNumber = @PhoneNumber,
			DesignationID = (SELECT Id FROM [config].[Designation] WHERE [Name] = @Designation),
			RoleID = (SELECT Id FROM [config].[UserRole] WHERE [Name] = @UserRole),
			IsActive = @IsActive,
			DateOfBirth = @DateOfBirth,
			DateOfJoin = @DateOfJoin,
			ManagerUID = @ManagerUID,
			[Location] = @Location,
			MaritalStatus = @MaritalStatus,
			Age = @Age,
			Gender = @Gender,
			BloodGroup = @BloodGroup,
			EmergencyNumber = @EmergencyNumber,
			About = @About,
			CreatedBy = @CreatedBy,
			CreatedOn = GETUTCDATE(),
			School = @School,
			College = @College,
			PreviousCompany = @PreviousCompany,
			PrivilegeLeave = @PrivilegeLeave,
			WellnessLeave = @WellnessLeave,
			EarnedLeave = @EarnedLeave,
			OptionalLeave = @OptionalLeave,
			CompOff = @CompOff,
			LossOfPay = @LossOfPay,
			PasswordHash = @PasswordHash,
			HashKey = @HashKey
	 END
END